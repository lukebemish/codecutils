plugins {
    id 'org.quiltmc.loom' version '0.12.+'
    id 'maven-publish'
}

archivesBaseName = "${mod_id}-common-${minecraft_version}"

license {
    matching('**/NightConfigOps.java') {
        header = rootProject.file('attribution/databuddy_header')
    }
    matching('**/JanksonOps.java') {
        header = rootProject.file('attribution/datafixer_header')
    }
}

repositories {
    maven {
        name = 'Forge / Mixin'
        url = 'https://maven.minecraftforge.net'
    }
}

loom {
    runConfigs.configureEach {
        ideConfigGenerated = false
    }
}

configurations {
    testCompileOnly.extendsFrom(compileOnly)
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft_version}:${parchment_version}@zip")
    }
    //DO NOT USE IN PROJECT
    //Provides necessary stuff for project to compile
    modCompileOnly("org.quiltmc:quilt-loader:${quilt_loader_version}")
}

import net.fabricmc.loom.task.AbstractRemapJarTask
tasks.withType(AbstractRemapJarTask).each {
    it.targetNamespace = "named"
}

processResources {
    def buildProps = project.properties.clone()

    filesMatching(['pack.mcmeta']) {
        expand buildProps
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
    }
}

plugins {
	id 'org.quiltmc.loom' version '0.12.+'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
	id "com.modrinth.minotaur" version "1.2.1"
}

archivesBaseName = "${mod_id}-quilt-${minecraft_version}"

repositories {

	maven {
		name 'Quilt (Release)'
		url 'https://maven.quiltmc.org/repository/release/'
	}

	maven {
		name 'Quilt (Snapshot)'
		url 'https://maven.quiltmc.org/repository/snapshot/'
		content {
			includeGroup 'org.quiltmc.fabric_api_qsl'
			includeGroupByRegex 'org\\.quiltmc\\.qsl(?:\\.[a-z_]+)?'
		}
	}
}

configurations {
	testCompileOnly.extendsFrom(compileOnly)
}

dependencies {

	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${parchment_minecraft_version}:${parchment_version}@zip")
	}
	modImplementation "org.quiltmc:quilt-loader:${quilt_loader_version}"

	modImplementation("org.quiltmc:qsl:${quilt_stdlib_version}")

	implementation project(":Common")

	compileOnly group:'com.google.auto.service', name:'auto-service', version:'1.0.1'
	annotationProcessor group:'com.google.auto.service', name:'auto-service', version:'1.0.1'

	include "com.electronwill.night-config:core:$project.nightconfig_version"
	include "com.electronwill.night-config:toml:$project.nightconfig_version"
	include "blue.endless:jankson:$project.jankson_version"
}

loom {
	runs {
		client {
			client()
			setConfigName("Quilt Client")
			ideConfigGenerated(true)
			runDir("run")
		}
		server {
			server()
			setConfigName("Quilt Server")
			ideConfigGenerated(true)
			runDir("runserver")
		}
	}
}

processResources {
    from project(":Common").sourceSets.main.resources
	inputs.property "version", project.version

	filesMatching("quilt.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

jar {
	from("LICENSE") {
		rename { "${it}_${mod_name}"}
	}
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
		mavenLocal()
    }
}

